---
import Layout from '@layouts/Default.astro';

// Define colors for styling
const colors = ['bg-pink', 'bg-blue', 'bg-green', 'bg-yellow', 'bg-purple'];
const randomColor = colors[Math.floor(Math.random() * colors.length)];

// Define images for the emotion guessing game
const images = [
    { src: 'https://i.pinimg.com/736x/fa/e9/6c/fae96c9ae39a45b5e82b8e543b9d0043.jpg', alt: 'Confused', emotion: 'confused' },
    { src: 'https://media.istockphoto.com/id/1045886560/photo/portrait-of-smiling-handsome-man-in-blue-t-shirt-standing-with-crossed-arms-isolated-on-grey.jpg?s=612x612&w=0&k=20&c=TX1-1UJ3PKonFEmgs_WDZf7wtfqKVMHYjeRaYjaZ1Rc=', alt: 'Happy', emotion: 'happy' },
    { src: 'https://c.stocksy.com/a/p7y400/z9/1184437.jpg', alt: 'Sad', emotion: 'sad' },
    { src: 'https://i.pinimg.com/736x/36/c3/3e/36c33e3ff7a210fdd48c57a7436cd61d.jpg', alt: 'Surprised', emotion: 'surprised' },
    { src: 'https://img.freepik.com/premium-photo/playful-emotions-having-fun-young-girl-casual-clothes-is-public-park-outdoors_146671-106708.jpg', alt: 'Playful', emotion: 'playful' },
    { src: 'https://i.pinimg.com/736x/75/09/cd/7509cd625a684d1544aa7ca2b03809bc.jpg', alt: 'Determined', emotion: 'determined' },
    { src: 'https://i.pinimg.com/736x/65/e7/25/65e725cdfbff5c4faa067bd452a1e6cd.jpg', alt: 'Touched', emotion: 'touched' },
    { src: 'https://i.pinimg.com/736x/79/f1/6a/79f16a489aab154dd0b76b91d078f42b.jpg', alt: 'Sad', emotion: 'sad' }
];

---

<Layout
    title='Emotion'
    pageTitle='Stoorybook | Emotion'
    description='Emotion page'
>
    <main class={`p-6 min-h-screen flex flex-col items-center gap-8 ${randomColor}`}>
        <div class="max-w-7xl mx-auto">
            <header class="mb-8">
                <h1 class="text-6xl font-bold text-gray-800 mb-2">Emotion</h1>
                <p class="text-2xl text-gray-600">Guess the emotion</p>
            </header>
            
            <div class="mt-8">
                <h2 class="text-4xl font-bold text-gray-800 mb-4">Guess the Emotion</h2>
                <img src={images[0].src} alt={images[0].alt} class="emotion-image w-full h-64 object-cover mb-4" />
                <div class="grid grid-cols-2 gap-4">
                    {images.map((image) => (
                        <button class="emotion-option p-4 bg-gray-200 rounded" onclick={`checkAnswer('${image.emotion}')`}>
                            {image.emotion}
                        </button>
                    ))}
                </div>
                <p id="result" class="mt-4 text-xl"></p>
            </div>
            
            <script>
                let currentRound = 0;
                let selectedImage = images[Math.floor(Math.random() * images.length)];

                function checkAnswer(selectedEmotion) {
                    const correctEmotion = selectedImage.emotion;
                    const resultElement = document.getElementById('result');
                    if (resultElement) {
                        if (selectedEmotion === correctEmotion) {
                            resultElement.textContent = 'Correct! ðŸŽ‰';
                        } else {
                            resultElement.textContent = 'Try again! ðŸ˜¢';
                        }
                    }

                    setTimeout(() => {
                        if (currentRound < images.length - 1) {
                            currentRound++;
                            selectedImage = images[Math.floor(Math.random() * images.length)];
                            updateRound();
                        } else {
                            resultElement.textContent = 'Quiz completed!';
                        }
                    }, 2000);
                }

                function updateRound() {
                    const imageElement = document.querySelector('.emotion-image') as HTMLImageElement;
                    if (imageElement) {
                        imageElement.src = selectedImage.src;
                        imageElement.alt = selectedImage.alt;
                        document.getElementById('result').textContent = '';
                    }
                }
            </script>
        </div>
    </main>
</Layout>

<style is:global>
    @tailwind base;
    @tailwind components;
    @tailwind utilities;

    .emotion-image {
        width: 200px;
        height: 200px;
        object-fit: cover;
    }
    .emotion-option {
        cursor: pointer;
        text-align: center;
    }
</style>

---
import Layout from '@layouts/Default.astro';

// Define colors for styling
const colors = ['bg-pink', 'bg-blue', 'bg-green', 'bg-yellow', 'bg-purple'];
const randomColor = colors[Math.floor(Math.random() * colors.length)];
---

<Layout title="Emotion Game" pageTitle="Storybook | Emotion Game" description="Practice identifying emotions">
  <main class={`${randomColor} p-6 min-h-screen flex flex-col items-center`}>
    <div class="max-w-7xl mx-auto w-full">
      <header class="mb-8 text-center">
        <h1 class="text-6xl font-bold text-gray-800 mb-2">Emotion Game</h1>
        <p class="text-2xl text-gray-600">Score: <span id="correct">0</span></p>
      </header>

      <div class="flex flex-col items-center gap-8">
        <a href="/" class="text-gray-600 hover:text-gray-800 transition-colors text-lg">
          &larr; Back to Home
        </a>

        <img
          id="emotion-image"
          src=""
          alt="Emotion"
          class="w-full max-w-lg rounded-xl shadow-xl"
        />

        <div id="options-container" class="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full max-w-2xl">
          <!-- Options will be dynamically inserted here -->
        </div>

        <button
          id="next-round"
          class="hidden w-full max-w-md bg-blue-500 text-white text-xl font-semibold py-4 px-8 rounded-lg hover:bg-blue-600 active:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all"
        >
          Next Round
        </button>

        <div id="game-over" class="hidden text-center bg-white p-8 rounded-xl shadow-lg w-full max-w-2xl">
          <h2 class="text-4xl font-bold text-gray-800 mb-4">Game Over!</h2>
          <p class="text-2xl text-gray-600 mb-6">Final Score: <span id="final-score">0</span></p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <button
              onclick="location.reload()"
              class="w-full sm:w-auto bg-blue-500 text-white text-xl font-semibold py-4 px-8 rounded-lg hover:bg-blue-600 active:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all"
            >
              Play Again
            </button>
            <a 
              href="/"
              class="w-full sm:w-auto bg-gray-500 text-white text-xl font-semibold py-4 px-8 rounded-lg hover:bg-gray-600 active:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-all text-center"
            >
              Return Home
            </a>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  let currentRound = 0;
  let score = 0;
  const maxRounds = 8;
  const images = [
    { src: 'https://i.pinimg.com/736x/fa/e9/6c/fae96c9ae39a45b5e82b8e543b9d0043.jpg', alt: 'Confused', emotion: 'confused', explanation: 'The furrowed brow and questioning expression are typical signs of confusion' },
    { src: 'https://media.istockphoto.com/id/1045886560/photo/portrait-of-smiling-handsome-man-in-blue-t-shirt-standing-with-crossed-arms-isolated-on-grey.jpg?s=612x612&w=0&k=20&c=TX1-1UJ3PKonFEmgs_WDZf7wtfqKVMHYjeRaYjaZ1Rc=', alt: 'Happy', emotion: 'happy', explanation: 'The wide smile and uplifted eyebrows indicate a positive and cheerful mood' },
    { src: 'https://img.freepik.com/free-photo/indoor-shot-emotional-curly-haired-young-woman-screams-loudly-keeps-palms-raised-mouth-opened-going-crazy-dressed-casual-green-knitted-sweater-poses-against-pink-background-feels-excited_273609-57240.jpg', alt: 'Excited', emotion: 'excited', explanation: 'The wide open mouth and energetic expression show excitement and enthusiasm' },
    { src: 'https://i.pinimg.com/736x/36/c3/3e/36c33e3ff7a210fdd48c57a7436cd61d.jpg', alt: 'Surprised', emotion: 'surprised', explanation: 'The wide-open eyes and slightly parted lips indicate surprise or astonishment' },
    { src: 'https://i.pinimg.com/736x/75/09/cd/7509cd625a684d1544aa7ca2b03809bc.jpg', alt: 'Determined', emotion: 'determined', explanation: 'The furrowed brow and focused expression suggest determination and resolve' },
    { src: 'https://i.pinimg.com/736x/17/23/95/172395fae6e480ee06ded2e59f4d7934.jpg', alt: 'Angry', emotion: 'angry', explanation: 'The furrowed brow and intense expression indicate anger or frustration' },
    { src: 'https://i.pinimg.com/736x/79/f1/6a/79f16a489aab154dd0b76b91d078f42b.jpg', alt: 'Sad', emotion: 'sad', explanation: 'The downward-facing mouth and drooping eyebrows suggest sadness or unhappiness' }
  ];

  function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  }

  function getRandomOptions(correctEmotion) {
    const otherEmotions = images
      .map(img => img.emotion)
      .filter(emotion => emotion !== correctEmotion);
    const shuffledEmotions = shuffleArray([...otherEmotions]);
    const options = shuffledEmotions.slice(0, 3);
    options.push(correctEmotion);
    return shuffleArray(options);
  }

  function checkAnswer(selected, correct) {
    const buttons = document.querySelectorAll('#options-container button');
    const currentImage = images[currentRound];
    
    buttons.forEach(button => {
      button.disabled = true;
      if (button.textContent?.toLowerCase() === correct) {
        button.classList.remove('hover:bg-gray-100', 'active:bg-gray-200');
        button.classList.add('bg-green-500', 'text-white');
      } else if (button.textContent?.toLowerCase() === selected && selected !== correct) {
        button.classList.remove('hover:bg-gray-100', 'active:bg-gray-200');
        button.classList.add('bg-red-500', 'text-white');
      }
    });

    if (selected === correct) {
      score++;
      const scoreElement = document.getElementById('correct');
      if (scoreElement) scoreElement.textContent = score.toString();
    }

    // Create and show explanation
    const explanationDiv = document.createElement('div');
    explanationDiv.className = 'mt-6 text-xl text-gray-700 text-center bg-white p-4 rounded-lg shadow';
    explanationDiv.textContent = currentImage.explanation;
    document.getElementById('options-container')?.appendChild(explanationDiv);

    currentRound++;
    document.getElementById('next-round')?.classList.remove('hidden');
  }

  function startNewRound() {
    if (currentRound >= maxRounds) {
      const finalScore = document.getElementById('final-score');
      if (finalScore) finalScore.textContent = score.toString();
      document.getElementById('game-over')?.classList.remove('hidden');
      document.getElementById('next-round')?.classList.add('hidden');
      return;
    }

    const currentImage = images[currentRound];
    const imageElement = document.getElementById('emotion-image') as HTMLImageElement;
    if (imageElement) {
      imageElement.src = currentImage.src;
      imageElement.alt = currentImage.alt;
    }

    const options = getRandomOptions(currentImage.emotion);
    const optionsContainer = document.getElementById('options-container');
    if (optionsContainer) {
      optionsContainer.innerHTML = '';

      options.forEach(option => {
        const button = document.createElement('button');
        button.textContent = option;
        button.className = 'w-full bg-white text-xl font-medium text-gray-800 py-4 px-6 rounded-lg shadow hover:bg-gray-100 active:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-300 focus:ring-offset-2 transition-all';
        button.onclick = () => checkAnswer(option, currentImage.emotion);
        optionsContainer.appendChild(button);
      });
    }

    document.getElementById('next-round')?.classList.add('hidden');
  }

  document.getElementById('next-round')?.addEventListener('click', startNewRound);

  // Start the first round
  startNewRound();
</script>